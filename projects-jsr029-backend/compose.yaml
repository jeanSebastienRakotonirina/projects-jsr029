# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:

  # BACKEND SERVER MACHINE NAME
  rnsback:
    build:
      context: . # Building Docker file from '.' the current repository
    depends_on:
      - mongodb
    networks:
      - mongo-private-tunnel
    environment:
      MONGO_USER: $MONGO_USER
      MONGO_PASSWORD: $MONGO_PASSWORD
      MONGO_URL: $MONGO_URL
      APP_PORT: $APP_PORT
  # MONGODB MACHINE NAME
  mongodb:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_USER
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_PASSWORD
      MONGO_INITDB_DATABASE: test
    # Exposer le port de mongo publiquement
    #ports:
    #  - 0.0.0.0:27017:27017
    networks:
      - mongo-private-tunnel

  # N'expos√© mongo que quand vous etes en devellopement
  # MONGODB-EXPRESS MACHINE NAME
  mongo-express:
    image: mongo-express
    restart: always
    depends_on:
      - mongodb
    ports:
      - 8082:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: $MONGO_USER
      ME_CONFIG_MONGODB_ADMINPASSWORD: $MONGO_PASSWORD
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb:27017
      ME_CONFIG_BASICAUTH: false
    networks:
      - mongo-private-tunnel


networks:
  mongo-private-tunnel: